import React, { useState } from 'react';

const SCRIPT_URL = process.env.REACT_APP_SCRIPT_URL;

function App() {
  const [step, setStep] = useState(0);
  const [name, setName] = useState('');
  const [currentScenarioIndex, setCurrentScenarioIndex] = useState(0);
  const [userAnswer, setUserAnswer] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [aiAnalysis, setAiAnalysis] = useState(null);
  const [showFeedback, setShowFeedback] = useState(false);

  const scenarios = [
    {
      title: "–ó–∞—Ç—Ä–∏–º–∫–∞ –ø–æ—Å–∏–ª–∫–∏",
      objection: "–î–æ–±—Ä–∏–π –¥–µ–Ω—å, —è –≤—ñ–¥—Å—Ç–µ–∂—É—é –ø–æ—Å–∏–ª–∫—É ‚Ññ12345, —ñ –≤–æ–Ω–∞ –≤–∂–µ 3 –¥–Ω—ñ –±–µ–∑ —Ä—É—Ö—É –Ω–∞ –≤–∞—à–æ–º—É —Å–æ—Ä—Ç—É–≤–∞–ª—å–Ω–æ–º—É —Ü–µ–Ω—Ç—Ä—ñ. –î–µ –≤–æ–Ω–∞? –ß–æ–º—É —Ç–∞–∫ –¥–æ–≤–≥–æ?",
      idealAnswer: "–†–æ–∑—É–º—ñ—é –≤–∞—à–µ –∑–∞–Ω–µ–ø–æ–∫–æ—î–Ω–Ω—è, —Ü–µ –¥—ñ–π—Å–Ω–æ –Ω–µ–ø—Ä–∏—î–º–Ω–æ, –∫–æ–ª–∏ –æ—á—ñ–∫—É—î—à –Ω–∞ –≤–∞–∂–ª–∏–≤–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è. –î–∞–≤–∞–π—Ç–µ —è –Ω–µ–≥–∞–π–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä—é –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é. –¢–∞–∫, –±–∞—á—É –≤–∞—à—É –ø–æ—Å–∏–ª–∫—É. –Ü–Ω–æ–¥—ñ —á–µ—Ä–µ–∑ –≤–µ–ª–∏–∫–µ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è –º–æ–∂–µ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏—Å—è –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é. –Ø —Å—Ç–≤–æ—Ä—é—é —Ç–µ—Ä–º—ñ–Ω–æ–≤–∏–π –∑–∞–ø–∏—Ç –Ω–∞ —Å–∫–ª–∞–¥, —â–æ–± —Ñ—ñ–∑–∏—á–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏–ª–∏ —ó—ó –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è. –û—á—ñ–∫—É–π—Ç–µ –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –ø—Ä–æ—Ç—è–≥–æ–º 2-3 –≥–æ–¥–∏–Ω. –Ø –æ—Å–æ–±–∏—Å—Ç–æ –ø—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª—é—é —Ü–µ."
    },
    {
      title: "–û–ø–ª–∞—Ç–∞ –∑–∞ –¥–æ—Å—Ç–∞–≤–∫—É –ª—ñ–∫—ñ–≤",
      objection: "–Ø –∑–∞–º–æ–≤–ª—è–≤ –¥–æ—Å—Ç–∞–≤–∫—É –ª—ñ–∫—ñ–≤. –ß–æ–º—É —è –º–∞—é –ø–ª–∞—Ç–∏—Ç–∏ –∑–∞ —Ü–µ –æ–∫—Ä–µ–º–æ 200 –≥—Ä–∏–≤–µ–Ω—å? –¶–µ –∂ –ø—Ä–æ—Å—Ç–æ –º–∞–ª–µ–Ω—å–∫–∞ –∫–æ—Ä–æ–±–æ—á–∫–∞, –≤–∞—à—ñ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∏ –¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—å –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ!",
      idealAnswer: "–†–æ–∑—É–º—ñ—é –≤–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è, —Ü—ñ–Ω–∞ –¥—ñ–π—Å–Ω–æ –≤–∞–∂–ª–∏–≤–∞. –°–ø—Ä–∞–≤–∞ –≤ —Ç–æ–º—É, —â–æ –¥–æ—Å—Ç–∞–≤–∫–∞ –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ñ–≤ - —Ü–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—è. –ú–∏ –≥–∞—Ä–∞–Ω—Ç—É—î–º–æ –¥–æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ–≥–æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É –Ω–∞ –≤—Å—å–æ–º—É —à–ª—è—Ö—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ç–µ—Ä–º–æ–±–æ–∫—Å—ñ–≤, —â–æ–± –ª—ñ–∫–∏ –Ω–µ –≤—Ç—Ä–∞—Ç–∏–ª–∏ —Å–≤–æ—ó—Ö –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π. –¶—è –ø–ª–∞—Ç–∞ –ø–æ–∫—Ä–∏–≤–∞—î –≤–∞—Ä—Ç—ñ—Å—Ç—å —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ–≥–æ –ø–∞–∫—É–≤–∞–Ω–Ω—è —Ç–∞ –≥–∞—Ä–∞–Ω—Ç—É—î, —â–æ –≤–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ —è–∫—ñ—Å–Ω–∏–π —Ç–∞ –±–µ–∑–ø–µ—á–Ω–∏–π –ø—Ä–µ–ø–∞—Ä–∞—Ç. –¶–µ –Ω–∞—à —Å—Ç–∞–Ω–¥–∞—Ä—Ç –±–µ–∑–ø–µ–∫–∏, –≤—ñ–¥ —è–∫–æ–≥–æ –º–∏ –Ω–µ –º–æ–∂–µ–º–æ –≤—ñ–¥–º–æ–≤–∏—Ç–∏—Å—å."
    },
    {
      title: "–ü–æ—à–∫–æ–¥–∂–µ–Ω–∞ –ø–æ—Å–∏–ª–∫–∞",
      objection: "–Ø —â–æ–π–Ω–æ –æ—Ç—Ä–∏–º–∞–≤ –ø–æ—Å–∏–ª–∫—É, –∞ –∫–æ—Ä–æ–±–∫–∞ –≤—Å—è –ø–æ–º'—è—Ç–∞, —ñ —Ç–æ–≤–∞—Ä –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —Ä–æ–∑–±–∏—Ç–∏–π! –í–∏ –º–µ–Ω—ñ –≤—Å–µ –∑—ñ–ø—Å—É–≤–∞–ª–∏! –Ø –≤–∏–º–∞–≥–∞—é –∫–æ–º–ø–µ–Ω—Å–∞—Ü—ñ—é!",
      idealAnswer: "–ú–µ–Ω—ñ –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–æ –ø—Ä–∏–∫—Ä–æ, —â–æ –≤–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –ø–æ—Å–∏–ª–∫—É –≤ —Ç–∞–∫–æ–º—É —Å—Ç–∞–Ω—ñ. –¶–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ –Ω–µ–ø—Ä–∏–ø—É—Å—Ç–∏–º–æ, —ñ —è –ø—Ä–∏–Ω–æ—à—É —Å–≤–æ—ó –≤–∏–±–∞—á–µ–Ω–Ω—è. –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–µ —Ö–≤–∏–ª—é–π—Ç–µ—Å—è, –º–∏ –≤—Å–µ –≤–∏—Ä—ñ—à–∏–º–æ. –°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—É–π—Ç–µ, –±—É–¥—å –ª–∞—Å–∫–∞, –ø–æ—à–∫–æ–¥–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É —Ç–∞ —É–ø–∞–∫–æ–≤–∫–∏ —ñ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –Ω–∞–º. –Ø –Ω–µ–≥–∞–π–Ω–æ –æ—Ñ–æ—Ä–º–ª—é—é –ø—Ä–µ—Ç–µ–Ω–∑—ñ—é. –ó–≥—ñ–¥–Ω–æ –∑ –≤–∞—Ä—Ç—ñ—Å—Ç—é, –≤–∫–∞–∑–∞–Ω–æ—é —É –¥–µ–∫–ª–∞—Ä–∞—Ü—ñ—ó, –º–∏ –ø–æ–≤–Ω—ñ—Å—Ç—é –∫–æ–º–ø–µ–Ω—Å—É—î–º–æ –∑–±–∏—Ç–∫–∏. –Ø –¥–æ–ø–æ–º–æ–∂—É –≤–∞–º –ø—Ä–æ–π—Ç–∏ —Ü–µ–π –ø—Ä–æ—Ü–µ—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —à–≤–∏–¥–∫–æ."
    }
  ];

  const currentScenario = scenarios[currentScenarioIndex];

  const handleNameSubmit = (e) => { e.preventDefault(); if (name.trim()) { setStep(1); } };

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!userAnswer.trim()) return;
    setIsLoading(true);
    const dataToSend = { name, answer: userAnswer, scenario: { title: currentScenario.title, objection: currentScenario.objection, idealAnswer: currentScenario.idealAnswer } };
    try {
      const response = await fetch(SCRIPT_URL, { method: 'POST', mode: 'cors', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(dataToSend) });
      const result = await response.json();
      if (result.status === 'success') { setAiAnalysis(result.analysis); } 
      else { setAiAnalysis({ score: '!', strengths: '–ü–æ–º–∏–ª–∫–∞ –∞–Ω–∞–ª—ñ–∑—É', areasForImprovement: result.message }); }
    } catch (error) {
      setAiAnalysis({ score: '!', strengths: '–ü–æ–º–∏–ª–∫–∞ –º–µ—Ä–µ–∂—ñ', areasForImprovement: '–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–≤\'—è–∑–∞—Ç–∏—Å—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏. –ú–æ–∂–ª–∏–≤–æ, –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–Ω–æ–≤–∏—Ç–∏ —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è Google –°–∫—Ä–∏–ø—Ç–∞.' });
    } finally {
      setIsLoading(false);
      setShowFeedback(true);
    }
  };

  const handleNext = () => {
    setShowFeedback(false);
    setAiAnalysis(null);
    setUserAnswer('');
    if (currentScenarioIndex < scenarios.length - 1) {
      setCurrentScenarioIndex(currentScenarioIndex + 1);
    } else {
      setStep(2);
    }
  };

  const renderStep = () => {
    if (step === 0) {
      return (
        <form onSubmit={handleNameSubmit} className="text-center">
          <h2 className="text-2xl font-bold mb-4">–°–∏–º—É–ª—è—Ç–æ—Ä —Ä–æ–±–æ—Ç–∏ –∑ –∑–∞–ø–µ—Ä–µ—á–µ–Ω–Ω—è–º–∏</h2>
          <p className="mb-6">–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ –¥–ª—è –ø–æ—á–∞—Ç–∫—É.</p>
          <input type="text" value={name} onChange={(e) => setName(e.target.value)} className="w-full max-w-md p-2 border border-gray-300 rounded-md shadow-sm" placeholder="–Ü–º'—è —Ç–∞ –ü—Ä—ñ–∑–≤–∏—â–µ" />
          <button type="submit" className="mt-4 px-6 py-2 bg-blue-600 text-white font-semibold rounded-md hover:bg-blue-700">–ü–æ—á–∞—Ç–∏ —Å–∏–º—É–ª—è—Ü—ñ—é</button>
        </form>
      );
    }
    if (step === 2) {
      return (
        <div className="text-center">
          <h2 className="text-2xl font-bold mb-4">–ß—É–¥–æ–≤–∞ —Ä–æ–±–æ—Ç–∞!</h2>
          <p>–í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–æ–π—à–ª–∏ –≤—Å—ñ —Å—Ü–µ–Ω–∞—Ä—ñ—ó. –í–∞—à—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É.</p>
          <button onClick={() => { setStep(0); setCurrentScenarioIndex(0); setName(''); }} className="mt-4 px-6 py-2 bg-blue-600 text-white font-semibold rounded-md hover:bg-blue-700">–ü—Ä–æ–π—Ç–∏ —â–µ —Ä–∞–∑</button>
        </div>
      );
    }
    if (isLoading) { return <div className="text-center"><h2 className="text-2xl font-bold animate-pulse">AI –∞–Ω–∞–ª—ñ–∑—É—î –≤–∞—à—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å...</h2></div>; }
    if (showFeedback && aiAnalysis) {
      return (
        <div>
          <h2 className="text-2xl font-bold mb-4 text-center">–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª—ñ–∑—É</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div className="md:col-span-1 flex flex-col items-center justify-center bg-gray-100 p-6 rounded-lg">
              <p className="text-lg font-semibold mb-2">–í–∞—à–∞ –æ—Ü—ñ–Ω–∫–∞</p>
              <div className={`w-32 h-32 rounded-full flex items-center justify-center text-white text-5xl font-bold ${aiAnalysis.score > 7 ? 'bg-green-500' : aiAnalysis.score > 4 ? 'bg-yellow-500' : 'bg-red-500'}`}>{aiAnalysis.score}</div>
            </div>
            <div className="md:col-span-2 bg-white p-6 rounded-lg shadow">
              <div className="mb-4">
                <h3 className="text-lg font-semibold text-green-700 mb-2">‚úÖ –°–∏–ª—å–Ω—ñ —Å—Ç–æ—Ä–æ–Ω–∏</h3>
                <p className="text-gray-700">{aiAnalysis.strengths}</p>
              </div>
              <div>
                <h3 className="text-lg font-semibold text-yellow-700 mb-2">üí° –ó–æ–Ω–∏ –¥–ª—è —Ä–æ—Å—Ç—É</h3>
                <p className="text-gray-700">{aiAnalysis.areasForImprovement}</p>
              </div>
            </div>
          </div>
          <div className="mt-6 text-center">
            <button onClick={handleNext} className="px-8 py-3 bg-blue-600 text-white font-semibold rounded-md hover:bg-blue-700">{currentScenarioIndex < scenarios.length - 1 ? '–ù–∞—Å—Ç—É–ø–Ω–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π' : '–ó–∞–≤–µ—Ä—à–∏—Ç–∏'}</button>
          </div>
        </div>
      );
    }
    return (
      <form onSubmit={handleSubmit}>
        <h2 className="text-2xl font-bold mb-2">{currentScenario.title}</h2>
        <p className="text-lg bg-gray-100 p-4 rounded-md mb-4"><span className="font-semibold">–ö–ª—ñ—î–Ω—Ç –∫–∞–∂–µ:</span> "{currentScenario.objection}"</p>
        <textarea value={userAnswer} onChange={(e) => setUserAnswer(e.target.value)} className="w-full h-40 p-2 border border-gray-300 rounded-md shadow-sm" placeholder="–ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å —Ç—É—Ç..." />
        <button type="submit" className="mt-4 px-6 py-2 bg-blue-600 text-white font-semibold rounded-md hover:bg-blue-700">–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å</button>
      </form>
    );
  };

  return (
    <div className="min-h-screen bg-gray-100 flex items-center justify-center p-4">
      <div className="w-full max-w-3xl bg-white p-8 rounded-xl shadow-lg">
        {renderStep()}
      </div>
    </div>
  );
}

export default App;